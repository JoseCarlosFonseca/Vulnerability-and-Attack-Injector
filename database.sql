DROP TABLE ATTACK_PAYLOADS;
DROP TABLE PAYLOADS;
DROP TABLE HTTP_VARIABLES_SQL_VARIABLES;
DROP TABLE HTTP_VARIABLES_SQL_QUERIES;
DROP TABLE MYSQL_QUERIES_VARIABLES;
DROP TABLE MYSQL_QUERIES;
DROP TABLE MYSQL_PACKETS;
DROP TABLE MYSQL_PACKET_TYPES;
DROP TABLE MYSQL_PROXY_PACKETS;
DROP TABLE VULNERABILITY_INJECTION_RESULTS;
DROP TABLE TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLES;
DROP TABLE TARGET_PHP_FILES_RUNS_FUNCTIONS;
DROP TABLE TARGET_PHP_FILES_RUNS;
DROP TABLE HTTP_RESPONSE_STATUS_CODES;
DROP TABLE VARIABLES_SQL_VARIABLES;
DROP TABLE TARGET_PHP_FILES_SQL_VARIABLES;
DROP TABLE TARGET_PHP_FILES_FUNCTIONS;
DROP TABLE TARGET_PHP_FILES_VARIABLES;
DROP TABLE TARGET_PHP_FILES_INCLUDES;
DROP TABLE TARGET_PHP_FILES;
DROP TABLE TARGET_PHP_WEB_APPLICATIONS;
DROP VIEW ALL_OPERATORS;
DROP TABLE SEARCH_TARGETS;
DROP TABLE OPERATORS;

--Vulnerability Operators
CREATE TABLE OPERATORS
(
ID INTEGER NOT NULL PRIMARY KEY,
NAME VARCHAR(10) NOT NULL UNIQUE,
DESCRIPTION VARCHAR(100),
OCCURENCE DECIMAL (4,2),
AFFECT_XSS VARCHAR(1) CONSTRAINT OPERATORS_XSS_CK CHECK (AFFECT_XSS IN ('Y','N')),
XSS_OCCURENCE DECIMAL (4,2),
XSS_ACTIVE VARCHAR(1) CONSTRAINT OPERATORS_XSS_ACTIVE_CK CHECK (XSS_ACTIVE IN ('Y','N')),
AFFECT_SQL VARCHAR(1) CONSTRAINT OPERATORS_SQL_CK CHECK (AFFECT_SQL IN ('Y','N')),
SQL_OCCURENCE DECIMAL (4,2),
SQL_ACTIVE VARCHAR(1) CONSTRAINT OPERATORS_SQL_ACTIVE_CK CHECK (SQL_ACTIVE IN ('Y','N')),
ACTIVE VARCHAR(1) CONSTRAINT OPERATORS_ACTIVE_CK CHECK (ACTIVE IN ('Y','N'))
);

--Search targets used by each one of the OPERATORS
CREATE TABLE SEARCH_TARGETS
(
ID INTEGER NOT NULL PRIMARY KEY,
NAME VARCHAR(30) NOT NULL UNIQUE,
DESCRIPTION VARCHAR(100),
REGEX VARCHAR(100),
OPERATOR INTEGER,
OCCURENCE DECIMAL (4,2), 
ACTIVE VARCHAR(1) CONSTRAINT SEARCH_TARGETS_ACTIVE_CK CHECK (ACTIVE IN ('Y','N')),
CONSTRAINT SEARCH_TARGETS_OPERATOR_FK FOREIGN KEY (OPERATOR) REFERENCES OPERATORS (ID)
);

--The Web Applications that are subject to attack
CREATE TABLE TARGET_PHP_WEB_APPLICATIONS
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
HOST VARCHAR(1000) NOT NULL,
HOST_PATH VARCHAR(250),
PORT INTEGER NOT NULL DEFAULT 80 CONSTRAINT TARGET_PHP_WEB_APPLICATIONS_PORT_CK CHECK (PORT BETWEEN 1 AND 65536),
DESCRIPTION VARCHAR(1000),
ACTIVE VARCHAR(1) CONSTRAINT TARGET_PHP_WEB_APPLICATIONS_ACTIVE_CK CHECK (ACTIVE IN ('Y','N'))
);

--The PHP Web Application files that are subject to attack
CREATE TABLE TARGET_PHP_FILES
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
TARGET_PHP_WEB_APPLICATION INTEGER,
NAME VARCHAR(100),
URL VARCHAR(1000) NOT NULL,
PATH VARCHAR(1000) NOT NULL UNIQUE,
TEXT CLOB(64 K),
CLEANED_TEXT CLOB(64 K),
ACTIVE VARCHAR(1) CONSTRAINT TARGET_PHP_FILES_ACTIVE_CK CHECK (ACTIVE IN ('Y','N')),
CONSTRAINT TARGET_PHP_FILES_FK FOREIGN KEY (TARGET_PHP_WEB_APPLICATION) REFERENCES TARGET_PHP_WEB_APPLICATIONS (ID)
);

--The PHP Web Application files that are included in the TARGET_PHP_FILES with:require, require_once, include, include_once
CREATE TABLE TARGET_PHP_FILES_INCLUDES
(
TARGET_PHP_FILE_MASTER INTEGER,
TARGET_PHP_FILE_INCLUDED INTEGER,
CONSTRAINT TARGET_PHP_FILES_INCLUDES_PK PRIMARY KEY (TARGET_PHP_FILE_MASTER, TARGET_PHP_FILE_INCLUDED),
CONSTRAINT TARGET_PHP_FILES_INCLUDES_FK1 FOREIGN KEY (TARGET_PHP_FILE_MASTER) REFERENCES TARGET_PHP_FILES (ID),
CONSTRAINT TARGET_PHP_FILES_INCLUDES_FK2 FOREIGN KEY (TARGET_PHP_FILE_INCLUDED) REFERENCES TARGET_PHP_FILES (ID)
);

--Variables of the PHP Web Application files that where detected by the static analyzer using the Vulnerability operators
CREATE TABLE TARGET_PHP_FILES_VARIABLES
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
TARGET_PHP_FILE INTEGER,
NAME VARCHAR(100) NOT NULL,
AFFECT_SQL_STATIC VARCHAR(1) DEFAULT 'U' CONSTRAINT TARGET_PHP_FILES_AFFECT_SQL_STATIC_CK CHECK (AFFECT_SQL_STATIC IN ('Y','N','U')),
AFFECT_SQL_DYNAMIC VARCHAR(1) DEFAULT 'U' CONSTRAINT TARGET_PHP_FILES_AFFECT_SQL_DYNAMIC_CK CHECK (AFFECT_SQL_DYNAMIC IN ('Y','N','U')),
INPUT_VARIABLE VARCHAR(1) CONSTRAINT TARGET_PHP_FILES_INPUT_VARIABLE_CK CHECK (INPUT_VARIABLE IN ('Y','N','U')), --Is it an input variable?
DEFAULT_TEST_VALUE VARCHAR(100),
DATA_TYPE VARCHAR(100) CONSTRAINT TARGET_PHP_FILES_DATA_TYPE_CK CHECK (DATA_TYPE IN ('CHAR','NUMERIC','DATE','U')),
CONSTRAINT TARGET_PHP_FILES_VARIABLES_FK FOREIGN KEY (TARGET_PHP_FILE) REFERENCES TARGET_PHP_FILES (ID)
);

--The PHP Web Application files that where subject to a dynamic analyzis
CREATE TABLE TARGET_PHP_FILES_RUNS
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
NAME VARCHAR(100),
TYPE VARCHAR(10) CONSTRAINT TARGET_PHP_FILES_RUNS_TYPE_CK CHECK (TYPE IN ('INSPECTION','ATTACK')),
ACTIVE VARCHAR(1) CONSTRAINT TARGET_PHP_FILES_RUNS_ACTIVE_CK CHECK (ACTIVE IN ('Y','N'))
);

--HTTP Response Status Codes:
--Wiley, The Web Application Hackers Handbook - Discovering and Exploiting Security Flaws, pag. 44 and 45
--O'Reilly, HTTP: The Definitive Guide, chapter B.2 Status Codes, pag 467, 468
CREATE TABLE HTTP_RESPONSE_STATUS_CODES
(
ID INTEGER NOT NULL PRIMARY KEY,
NAME VARCHAR(100),
COMPLETE VARCHAR(100),
DECRIPTION VARCHAR(1000)
);

--Complete result of the Dynamic Analyzis performed to the PHP Web Application files
CREATE TABLE TARGET_PHP_FILES_RUNS_FUNCTIONS
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
TARGET_PHP_FILE INTEGER,
TARGET_PHP_FILES_RUN INTEGER,
NAME VARCHAR(100),
HTTP_REQUEST_HEADER CLOB(64 K),
HTTP_REQUEST_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
HTTP_REQUEST_HOST VARCHAR(32672),
HTTP_REQUEST_PATH VARCHAR(32672),
HTTP_REQUEST_FILE VARCHAR(32672),
HTTP_REQUEST_METHOD VARCHAR(4) CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_METHOD_CK CHECK (HTTP_REQUEST_METHOD IN ('GET','POST')),
HTTP_REQUEST_GET VARCHAR(32672),
HTTP_REQUEST_POST VARCHAR(32672),
HTTP_REQUEST_COOKIE VARCHAR(32672),
HTTP_REQUEST_COOKIE2 VARCHAR(32672),
HTTP_REQUEST_SET_COOKIE2 VARCHAR(32672),
HTTP_REQUEST_STATUS_CODE INTEGER,
HTTP_RESPONSE_HEADER CLOB(64 K),
HTTP_RESPONSE_CONTENT CLOB(512 K),
HTTP_RESPONSE_SIZE INTEGER,
HTTP_RESPONSE_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
HTTP_RESPONSE_COOKIE VARCHAR(32672),
HTTP_RESPONSE_COOKIE2 VARCHAR(32672),
HTTP_RESPONSE_SET_COOKIE2 VARCHAR(32672),
HTTP_RESPONSE_STATUS_CODE INTEGER,
ACTIVE VARCHAR(1) CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_ACTIVE_CK CHECK (ACTIVE IN ('Y','N')) DEFAULT 'Y',
MODE VARCHAR(10) CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_MODE_CK CHECK (MODE IN ('INSPECTION','ATTACK')),
CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_FK1 FOREIGN KEY (TARGET_PHP_FILE) REFERENCES TARGET_PHP_FILES (ID),
CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_FK2 FOREIGN KEY (TARGET_PHP_FILES_RUN) REFERENCES TARGET_PHP_FILES_RUNS (ID),
CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_FK3 FOREIGN KEY (HTTP_REQUEST_STATUS_CODE) REFERENCES HTTP_RESPONSE_STATUS_CODES (ID),
CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_FK4 FOREIGN KEY (HTTP_RESPONSE_STATUS_CODE) REFERENCES HTTP_RESPONSE_STATUS_CODES (ID)
);
CREATE INDEX TARGET_PHP_FILES_RUNS_FUNCTIONS_HTTP_REQUEST_TIMESTAMP_I ON TARGET_PHP_FILES_RUNS_FUNCTIONS(HTTP_REQUEST_TIMESTAMP);

--Variables of the PHP Web Application files that where detected by the dynamic analyzer
CREATE TABLE TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLES
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
TARGET_PHP_FILES_RUNS_FUNCTION INTEGER,
TARGET_PHP_FILES_VARIABLE INTEGER,
NAME VARCHAR(100),
VALUE VARCHAR(32672),
DECODED_VALUE VARCHAR(32672),
DATA_TYPE VARCHAR(100) CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLES_DATA_TYPE_CK CHECK (DATA_TYPE IN ('CHAR','NUMERIC','DATE','U')),
TYPE VARCHAR(100) CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLES_TYPE_CK CHECK (TYPE IN ('POST','GET','COOKIE')),
MODE VARCHAR(10) CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLES_MODE_CK CHECK (MODE IN ('INSPECTION','ATTACK')),
CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLES_FK1 FOREIGN KEY (TARGET_PHP_FILES_RUNS_FUNCTION) REFERENCES TARGET_PHP_FILES_RUNS_FUNCTIONS (ID),
CONSTRAINT TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLES_FK2 FOREIGN KEY (TARGET_PHP_FILES_VARIABLE) REFERENCES TARGET_PHP_FILES_VARIABLES (ID)
);

--Functions of the PHP Web Application files that where detected by the static analyzer
CREATE TABLE TARGET_PHP_FILES_FUNCTIONS
(
ID INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED BY DEFAULT AS IDENTITY" - Derby provides auto-incremented sequence values to this as default only when you are not providing values.
TARGET_PHP_FILE INTEGER,
NAME VARCHAR(100) NOT NULL,
START_CHAR_OF_FUNCTION_LINE INTEGER,
END_CHAR_OF_FUNCTION_LINE INTEGER,
START_FUNCTION_LINE INTEGER,
END_FUNCTION_LINE INTEGER,
CONSTRAINT TARGET_PHP_FILES_FUNCTIONS_FK FOREIGN KEY (TARGET_PHP_FILE) REFERENCES TARGET_PHP_FILES (ID)
);

--Variables that may be directely or indirectely related to a SQL query of the PHP Web Application files that where detected by the static analyzer, after analyzing the TARGET_PHP_FILES_VARIABLES
CREATE TABLE TARGET_PHP_FILES_SQL_VARIABLES
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
TARGET_PHP_FILES_VARIABLE INTEGER,
TARGET_PHP_FILES_FUNCTION INTEGER,
TARGET_VARIABLE_NAME VARCHAR(100),
START_CHAR_OF_TARGET_LINE INTEGER,
END_CHAR_OF_TARGET_LINE INTEGER,
START_TARGET_LINE INTEGER,
END_TARGET_LINE INTEGER,
SQL_COMMAND_TYPE VARCHAR(10),
SQL_COMMAND_TEXT VARCHAR(32672),
CONSTRAINT TARGET_PHP_FILES_SQL_VARIABLES_FK1 FOREIGN KEY (TARGET_PHP_FILES_VARIABLE) REFERENCES TARGET_PHP_FILES_VARIABLES (ID),
CONSTRAINT TARGET_PHP_FILES_SQL_VARIABLES_FK2 FOREIGN KEY (TARGET_PHP_FILES_FUNCTION) REFERENCES TARGET_PHP_FILES_FUNCTIONS (ID)
);

--Mapping PHP file variables with:
--1) the locations where they are used in queries
--2) the locations where other variables that tyey depend on are used in queries
CREATE TABLE VARIABLES_SQL_VARIABLES
(
TARGET_PHP_FILES_VARIABLE INTEGER,
TARGET_PHP_FILES_SQL_VARIABLE INTEGER,
CONSTRAINT VARIABLES_SQL_VARIABLES_PK PRIMARY KEY (TARGET_PHP_FILES_VARIABLE, TARGET_PHP_FILES_SQL_VARIABLE),
CONSTRAINT VARIABLES_SQL_VARIABLES_FK1 FOREIGN KEY (TARGET_PHP_FILES_VARIABLE) REFERENCES TARGET_PHP_FILES_VARIABLES (ID),
CONSTRAINT VARIABLES_SQL_VARIABLES_FK2 FOREIGN KEY (TARGET_PHP_FILES_SQL_VARIABLE) REFERENCES TARGET_PHP_FILES_VARIABLES (ID)
);

--Results of the Vulnerability Injection, using the Vulnerability Operators
CREATE TABLE VULNERABILITY_INJECTION_RESULTS
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
TARGET_PHP_FILE INTEGER,
SEARCH_TARGET INTEGER,
TARGET_PHP_FILES_VARIABLE INTEGER,
START_CHAR INTEGER,
END_CHAR INTEGER,
START_CHAR_OF_TARGET_LINE INTEGER,
END_CHAR_OF_TARGET_LINE INTEGER,
START_TARGET_LINE INTEGER,
END_TARGET_LINE INTEGER,
START_OF_TARGET_COLUMN INTEGER,
END_OF_TARGET_COLUMN INTEGER,
ORIGINAL_TEXT VARCHAR(1000),
VULNERABLE_TEXT VARCHAR(1000),
DIFF_TEXT VARCHAR(1000),
TARGET_FUNCTION VARCHAR(1000),
TARGET_FUNCTION_ARGUMENT VARCHAR(1000),
TARGET_PHP_VARIABLE VARCHAR(100),
ACTION VARCHAR(100),
PARENT VARCHAR(100),
ACTIVE VARCHAR(1) CONSTRAINT VULNERABILITY_INJECTION_RESULTS_ACTIVE_CK CHECK (ACTIVE IN ('Y','N')),
CONSTRAINT VULNERABILITY_INJECTION_RESULTS_TARGET_PHP_FILE_FK FOREIGN KEY (TARGET_PHP_FILE) REFERENCES TARGET_PHP_FILES (ID),
CONSTRAINT VULNERABILITY_INJECTION_RESULTS_SEARCH_TARGET_FK1 FOREIGN KEY (SEARCH_TARGET) REFERENCES SEARCH_TARGETS (ID),
CONSTRAINT VULNERABILITY_INJECTION_RESULTS_SEARCH_TARGET_FK2 FOREIGN KEY (TARGET_PHP_FILES_VARIABLE) REFERENCES TARGET_PHP_FILES_VARIABLES (ID)
);

--Vulnerability Operators and related Search Targets
CREATE VIEW ALL_OPERATORS AS
SELECT OPERATORS.ID AS OPERATORS_ID, OPERATORS.NAME AS OPERATORS_NAME, OPERATORS.OCCURENCE AS OPERATORS_OCCURENCE,
SEARCH_TARGETS.ID AS SEARCH_TARGETS_ID, SEARCH_TARGETS.NAME AS SEARCH_TARGETS_NAME, SEARCH_TARGETS.REGEX AS SEARCH_TARGETS_REGEX
FROM OPERATORS, SEARCH_TARGETS
WHERE SEARCH_TARGETS.OPERATOR=OPERATORS.ID
AND OPERATORS.ACTIVE='Y'
AND ((OPERATORS.AFFECT_XSS='Y' AND OPERATORS.XSS_ACTIVE='Y') OR (OPERATORS.AFFECT_SQL='Y' AND OPERATORS.SQL_ACTIVE='Y'))
AND SEARCH_TARGETS.ACTIVE='Y';

--Packets captured by the Proxy. Each Proxy packet contains several MySQL packets that have to be split. Each Proxy packet may come from a Client or the MySQL Server
CREATE TABLE MYSQL_PROXY_PACKETS
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
THIS_THREAD_ID INTEGER NOT NULL,
PEER_THREAD_ID INTEGER NOT NULL,
HTTP_PACKET_SEQUENCE INTEGER,	
PROXY_PACKET BLOB (64 K),
PACKET_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
CLIENT_SERVER VARCHAR(1) CONSTRAINT CLIENT_SERVER_CK CHECK (CLIENT_SERVER IN ('C','S')),
SERVER INTEGER,
TARGET_PHP_FILES_RUNS_FUNCTION INTEGER,
MODE VARCHAR(10) CONSTRAINT MYSQL_PROXY_PACKETS_MODE_CK CHECK (MODE IN ('INSPECTION','ATTACK')),
CONSTRAINT MYSQL_PROXY_PACKETS_FK1 FOREIGN KEY (SERVER) REFERENCES MYSQL_PROXY_PACKETS (ID),
CONSTRAINT MYSQL_PROXY_PACKETS_FK2 FOREIGN KEY (TARGET_PHP_FILES_RUNS_FUNCTION) REFERENCES TARGET_PHP_FILES_RUNS_FUNCTIONS (ID)
);
CREATE INDEX MYSQL_PROXY_PACKETS_PACKET_TIMESTAMP_I ON MYSQL_PROXY_PACKETS(PACKET_TIMESTAMP);

--Types of MySQL packets: http://forge.mysql.com/wiki/MySQL_Internals_ClientServer_Protocol#Command_arguments
CREATE TABLE MYSQL_PACKET_TYPES
(
ID INTEGER NOT NULL PRIMARY KEY,
NAME VARCHAR(100) NOT NULL,
CLIENT_SERVER VARCHAR(1) CONSTRAINT MYSQL_PACKET_TYPE_CK CHECK (CLIENT_SERVER IN ('C','S'))
);

--The resulting MySQL packets, after analyzing each MYSQL_PROXY_PACKETS
CREATE TABLE MYSQL_PACKETS
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
MYSQL_PROXY_PACKET INTEGER,
MYSQL_SEQUENCE_NAME VARCHAR(100),
MYSQL_SEQUENCE INTEGER,
PACKET_SEQUENCE INTEGER,
MYSQL_PACKET_TYPE INTEGER,
MYSQL_PACKET BLOB (64 K),
MYSQL_PACKET_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
MYSQL_PACKET_NUMBER INTEGER,
IN_TRANSACTION INTEGER,
AUTO_COMMIT INTEGER,
USERNAME VARCHAR(100),
DATABASENAME VARCHAR(100),
SQL_COMMAND VARCHAR(2000),
AFFECTED_ROWS INTEGER,
WARNING_COUNT INTEGER,
SERVER_STATUS INTEGER,
ERRNO INTEGER,
MESSAGE VARCHAR(100),
FIELD_COUNT INTEGER,
ROW_COUNT INTEGER,
CLIENT_SERVER VARCHAR(1) CONSTRAINT MYSQL_PACKETS_CLIENT_SERVER_CK CHECK (CLIENT_SERVER IN ('C','S')),
CONSTRAINT MYSQL_PACKETS_FK1 FOREIGN KEY (MYSQL_PROXY_PACKET) REFERENCES MYSQL_PROXY_PACKETS (ID),
CONSTRAINT MYSQL_PACKETS_FK2 FOREIGN KEY (MYSQL_PACKET_TYPE) REFERENCES MYSQL_PACKET_TYPES (ID)
);

--MySQL Queries executed and their results, after analyzing each sequence of MYSQL_PACKETS
CREATE TABLE MYSQL_QUERIES
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
MYSQL_PROXY_PACKET_CLIENT INTEGER,
MYSQL_SEQUENCE_NAME VARCHAR(100),
MYSQL_QUERY_SEQUENCE INTEGER,
SQL_COMMAND VARCHAR(2000),
SQL_COMMAND_STRUCTURE VARCHAR(2000),
FIELD_COUNT INTEGER,
ROW_COUNT INTEGER,
MYSQL_QUERY_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
MYSQL_RESPONSE_TIMESTAMP TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
CONSTRAINT MYSQL_QUERIES_FK FOREIGN KEY (MYSQL_PROXY_PACKET_CLIENT) REFERENCES MYSQL_PROXY_PACKETS (ID)
);

--Variables of the MySQL queries that have been replaced by tags in the SQL_COMMAND_STRUCTURE field of the MYSQL_QUERIES table
CREATE TABLE MYSQL_QUERIES_VARIABLES
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
MYSQL_QUERY INTEGER,
NAME VARCHAR(100),
VALUE VARCHAR(32672),
DATA_TYPE VARCHAR(100) CONSTRAINT MYSQL_QUERIES_VARIABLES_DATA_TYPE_CK CHECK (DATA_TYPE IN ('CHAR','NUMERIC','DATE')),
CONSTRAINT MYSQL_QUERIES_VARIABLES_FK FOREIGN KEY (MYSQL_QUERY) REFERENCES MYSQL_QUERIES (ID)
);

--HTTP variables wose values are present in the SQL queries sent to the MySQL server
CREATE TABLE HTTP_VARIABLES_SQL_QUERIES
(
MYSQL_QUERY INTEGER,
TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLE INTEGER,
COUNT_STRUCTURE INTEGER, --Number of occurrences affecting the SQL structure
COUNT_VARIABLES INTEGER, --Number of occurrences in SQL variables
CONSTRAINT HTTP_VARIABLES_SQL_PK PRIMARY KEY (MYSQL_QUERY, TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLE),
CONSTRAINT HTTP_VARIABLES_SQL_FK1 FOREIGN KEY (MYSQL_QUERY) REFERENCES MYSQL_QUERIES (ID),
CONSTRAINT HTTP_VARIABLES_SQL_FK2 FOREIGN KEY (TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLE) REFERENCES TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLES (ID)
);

--HTTP variables wose values are present in the SQL query variables sent to the MySQL server
CREATE TABLE HTTP_VARIABLES_SQL_VARIABLES
(
MYSQL_QUERIES_VARIABLE INTEGER,
TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLE INTEGER,
COUNT INTEGER,
CONSTRAINT HTTP_VARIABLES_SQL_VARIABLES_PK PRIMARY KEY (MYSQL_QUERIES_VARIABLE, TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLE),
CONSTRAINT HTTP_VARIABLES_SQL_VARIABLES_FK1 FOREIGN KEY (MYSQL_QUERIES_VARIABLE) REFERENCES MYSQL_QUERIES_VARIABLES (ID),
CONSTRAINT HTTP_VARIABLES_SQL_VARIABLES_FK2 FOREIGN KEY (TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLE) REFERENCES TARGET_PHP_FILES_RUNS_FUNCTIONS_VARIABLES (ID)
);

--Payload collection used when attacking a Web Application
CREATE TABLE PAYLOADS
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
NAME VARCHAR(256),
PAYLOAD VARCHAR(32672),
DESCRIPTION VARCHAR(256)
);

--Attacks payloads and results
CREATE TABLE ATTACK_PAYLOADS
(
ID INTEGER GENERATED ALWAYS AS IDENTITY NOT NULL PRIMARY KEY, -- "GENERATED ALWAYS AS IDENTITY" - Derby always provides auto-incremented sequence values to this column. You are not allowed to specify your own values.
VULNERABILITY_INJECTION_RESULT INTEGER,
TARGET_PHP_FILES_RUNS_FUNCTION INTEGER,
TARGET_PHP_FILES_VARIABLE INTEGER,
PAYLOAD INTEGER,
ATTACK_INPUT VARCHAR(32672),
TYPE VARCHAR(100) CONSTRAINT ATTACK_PAYLOADS_TYPE_CK CHECK (TYPE IN ('POST','GET','COOKIE')),
ATTACK_EXPECTED_OUTPUT VARCHAR(32672),
HTTP_REQUEST CLOB(64 K),
START_ATTACK_TIMESTAMP TIMESTAMP,
END_ATTACK_TIMESTAMP TIMESTAMP,
ATTACK_TARGET_PHP_FILES_RUNS_FUNCTION INTEGER,
ATTACK_RESULT VARCHAR(100) DEFAULT 'NOT EXECUTED' CONSTRAINT ATTACK_PAYLOADS_ATTACK_RESULT_CK CHECK (ATTACK_RESULT IN ('NOT EXECUTED','UNDEFINED','SUCCESSFUL','NOT SUCCESSFUL')),
IDS_RESULT CLOB(512 K),
IDS_COMMAND_DETECTION_RESULT VARCHAR(100) DEFAULT 'NOT EXECUTED' CONSTRAINT ATTACK_PAYLOADS_IDS_COMMAND_DETECTION_RESULT_CK CHECK (IDS_COMMAND_DETECTION_RESULT IN ('NOT EXECUTED','UNDEFINED','SUCCESSFUL','NOT SUCCESSFUL')),
IDS_TRANSACTION_DETECTION_RESULT VARCHAR(100) DEFAULT 'NOT EXECUTED' CONSTRAINT ATTACK_PAYLOADS_IDS_TRANSACTION_DETECTION_RESULT_CK CHECK (IDS_TRANSACTION_DETECTION_RESULT IN ('NOT EXECUTED','UNDEFINED','SUCCESSFUL','NOT SUCCESSFUL')),
CONSTRAINT ATTACK_PAYLOADS_FK1 FOREIGN KEY (VULNERABILITY_INJECTION_RESULT) REFERENCES VULNERABILITY_INJECTION_RESULTS (ID),
CONSTRAINT ATTACK_PAYLOADS_FK2 FOREIGN KEY (TARGET_PHP_FILES_RUNS_FUNCTION) REFERENCES TARGET_PHP_FILES_RUNS_FUNCTIONS (ID),
CONSTRAINT ATTACK_PAYLOADS_FK3 FOREIGN KEY (TARGET_PHP_FILES_VARIABLE) REFERENCES TARGET_PHP_FILES_VARIABLES (ID),
CONSTRAINT ATTACK_PAYLOADS_FK4 FOREIGN KEY (PAYLOAD) REFERENCES PAYLOADS (ID),
CONSTRAINT ATTACK_PAYLOADS_FK5 FOREIGN KEY (ATTACK_TARGET_PHP_FILES_RUNS_FUNCTION) REFERENCES TARGET_PHP_FILES_RUNS_FUNCTIONS (ID)
);

INSERT INTO OPERATORS VALUES (1,'OMFC-A','MISSING FUNCTION CALL-A',45.34,'Y',37.45,'N','Y',64.25,'Y','Y');
INSERT INTO OPERATORS VALUES (2,'OMFC-B','MISSING FUNCTION CALL-B',18.32,'Y',24.24,'N','Y',4.15,'Y','Y');
INSERT INTO OPERATORS VALUES (3,'OMFC-C','MISSING FUNCTION CALL-C',12.21,'Y',15.58,'N','Y',4.15,'Y','Y');

INSERT INTO SEARCH_TARGETS VALUES (1,'(int)','(int)','\(\bint\b\)\s*',1,null,'Y');
INSERT INTO SEARCH_TARGETS VALUES (2,'(integer)','(integer)','\(\binteger\b\)\s*',1,null,'Y');
INSERT INTO SEARCH_TARGETS VALUES (3,'intval','intval()','\bintval\b\s*',1,null,'Y');
INSERT INTO SEARCH_TARGETS VALUES (4,'addslashes','addslashes()','\baddslashes\b\s*',3,null,'Y');
INSERT INTO SEARCH_TARGETS VALUES (5,'eregi_replace','eregi_replace()','\beregi_replace\b\s*',3,null,'Y');
INSERT INTO SEARCH_TARGETS VALUES (6,'stripslashes','stripslashes()','\bstripslashes\b\s*',3,null,'Y');
INSERT INTO SEARCH_TARGETS VALUES (7,'htmlentities','htmlentities()','\bhtmlentities\b\s*',3,null,'Y');
INSERT INTO SEARCH_TARGETS VALUES (8,'preg_replace','preg_replace()','\bpreg_replace\b\s*',3,null,'Y');
INSERT INTO SEARCH_TARGETS VALUES (9,'htmlspecialchars','htmlspecialchars()','\bhtmlspecialchars\b\s*',3,null,'Y');
INSERT INTO SEARCH_TARGETS VALUES (10,'md5','md5()','\bmd5\b\s*',3,null,'Y');
INSERT INTO SEARCH_TARGETS VALUES (11,'str_replace','str_replace()','\bstr_replace\b\s*',3,null,'Y');
INSERT INTO SEARCH_TARGETS VALUES (12,'urlencode','urlencode()','\burlencode\b\s*',3,null,'Y');

INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (100,'Continue','100 Continue','This response is sent in some circumstances when a client submits a request containing a body. The response indicates that the request headers were received and that the client should continue sending the body. The server will then return a second response when the request has been completed.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (200,'Ok','200 Ok','This indicates that the request was successful and the response body contains the result of the request.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (201,'Created','201 Created','This is returned in response to a PUT request to indicate that the request was successful.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (301,'Moved Permanently','301 Moved Permanently','This redirects the browser permanently to a different URL, which is specified in the Location header. The client should use the new URL in the future rather than the original.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (302,'Found','302 Found','This redirects the browser temporarily to a different URL, which is specified in the Location header. The client should revert to the original URL in subsequent requests.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (304,'Not Modified','304 Not Modified','This instructs the browser to use its cached copy of the requested resource. The server uses the If-Modified-Since and If-None-Match request headers to determine whether the client has the latest version of the resource.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (400,'Bad Request','400 Bad Request','This indicates that the client submitted an invalid HTTP request. You will probably encounter this when you have modified a request in certain invalid ways, for example by placing a space character into the URL.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (401,'Unauthorized','401 Unauthorized','The server requires HTTP authentication before the request will be granted. The WWW-Authenticate header contains details of the type(s) of authentication supported.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (403,'Forbidden','403 Forbidden','This indicates that no one is allowed to access the requested resource, regardless of authentication.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (404,'Not Found','404 Not Found','This indicates that the requested resource does not exist.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (405,'Method Not Allowed','405 Method Not Allowed','This indicates that the method used in the request is not supported for the specified URL. For example, you may receive this status code if you attempt to use the PUT method where it is not supported.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (413,'Request Entity Too Large','413 Request Entity Too Large','If you are probing for buffer overflow vulnerabilities in native code, and so submitting long strings of data, this indicates that the body of your request is too large for the server to handle.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (414,'Request URI Too Long','414 Request URI Too Long','Similar to the previous response, this indicates that the URL used in the request is too large for the server to handle.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (500,'Internal Server Error','500 Internal Server Error','This indicates that the server encountered an error fulfilling the request. This normally occurs when you have submitted unexpected input that caused an unhandled error somewhere within the application’s processing. You should review the full contents of the server’s response closely for any details indicating the nature of the error.');
INSERT INTO HTTP_RESPONSE_STATUS_CODES VALUES (503,'Service Unavailable','503 Service Unavailable','This normally indicates that, although the web server itself is functioning and able to respond to requests, the application accessed via the server is not responding. You should verify whether this is the result of any action that you have performed.');

INSERT INTO PAYLOADS VALUES (DEFAULT,null,'''',null);
INSERT INTO PAYLOADS VALUES (DEFAULT,null,'or 1=1',null);
INSERT INTO PAYLOADS VALUES (DEFAULT,null,'or ''a''=''a',null);
INSERT INTO PAYLOADS VALUES (DEFAULT,null,'CONNECTION_ID()-CONNECTION_ID()','Evaluate to 0 on MySQL and generate an error on other databases');
INSERT INTO PAYLOADS VALUES (DEFAULT,null,'+1-1',null);
INSERT INTO PAYLOADS VALUES (DEFAULT,null,'67-ASCII(''A'')',null);
INSERT INTO PAYLOADS VALUES (DEFAULT,null,'51-ASCII(1)',null);

INSERT INTO MYSQL_PACKET_TYPES VALUES (1,'Handshake Initialisation Packet','S');
INSERT INTO MYSQL_PACKET_TYPES VALUES (2,'Client Authentication Packet','C');
INSERT INTO MYSQL_PACKET_TYPES VALUES (3,'OK Packet','S');
INSERT INTO MYSQL_PACKET_TYPES VALUES (4,'Error Packet','S');
INSERT INTO MYSQL_PACKET_TYPES VALUES (5,'EOF Packet','S');
INSERT INTO MYSQL_PACKET_TYPES VALUES (6,'Command Packet','C');
INSERT INTO MYSQL_PACKET_TYPES VALUES (7,'Result Set Packet','S');
INSERT INTO MYSQL_PACKET_TYPES VALUES (8,'Request Use database','C');
INSERT INTO MYSQL_PACKET_TYPES VALUES (9,'Request Quit','C');
INSERT INTO MYSQL_PACKET_TYPES VALUES (10,'Result Set Header Packet','S');
INSERT INTO MYSQL_PACKET_TYPES VALUES (11,'Field Packet','S');
INSERT INTO MYSQL_PACKET_TYPES VALUES (12,'Row Data Packet','S');
INSERT INTO MYSQL_PACKET_TYPES VALUES (91,'Undefined','S');
INSERT INTO MYSQL_PACKET_TYPES VALUES (92,'Undefined','C');


create view teste1 as
(
SELECT M.ID, CAST(M.PACKET_TIMESTAMP AS VARCHAR(100)), '0'
FROM MYSQL_PROXY_PACKETS M
UNION
SELECT P.ID, CAST(P.HTTP_REQUEST_TIMESTAMP AS VARCHAR(100)), CAST(P.HTTP_RESPONSE_TIMESTAMP AS VARCHAR(100))
FROM TARGET_PHP_FILES_RUNS_FUNCTIONS P
order by 2
);


create view teste2 as
(
SELECT M.ID, CAST(M.PACKET_TIMESTAMP AS VARCHAR(100)),P.ID, CAST(P.HTTP_REQUEST_TIMESTAMP AS VARCHAR(100)), CAST(P.HTTP_RESPONSE_TIMESTAMP AS VARCHAR(100))
FROM MYSQL_PROXY_PACKETS M, TARGET_PHP_FILES_RUNS_FUNCTIONS P
WHERE M.PACKET_TIMESTAMP > P.HTTP_REQUEST_TIMESTAMP
AND M.PACKET_TIMESTAMP < P.HTTP_RESPONSE_TIMESTAMP
);

create view MYSQL_SEQUENCE_ORDERED as
(
select MYSQL_SEQUENCE_NAME,MYSQL_SEQUENCE,PACKET_SEQUENCE,MYSQL_PACKET_TYPE,MYSQL_PACKET_NUMBER,SQL_COMMAND, FIELD_COUNT,CLIENT_SERVER
from mysql_packets
order by mysql_sequence_name,mysql_sequence
);

create view teste3 as
(
select VULNERABILITY_INJECTION_RESULTS.id,TARGET_PHP_FILES_runs_FUNCTIONS.id,VULNERABILITY_INJECTION_RESULTS.TARGET_PHP_FILES_VARIABLE,payloads.id
from TARGET_PHP_FILES_runs_FUNCTIONS,VULNERABILITY_INJECTION_RESULTS,PAYLOADS
where TARGET_PHP_FILES_runs_FUNCTIONS.TARGET_PHP_FILE=VULNERABILITY_INJECTION_RESULTS.TARGET_PHP_FILE
and mode='INSPECTION'
);
